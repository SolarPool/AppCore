using System;
using ReactiveUI;

namespace Ciphernote.Model
{
    public class Note : ReactiveObject,
        IDisposable
    {
        public long? Id { get; set; }

        // global id
        public Guid Uid { get; set; }

        public bool IsDeleted { get; set; }
        public bool IsSyncPending { get; set; }

        public string Title { get; set; }
        public string Excerpt { get; set; }
        public string ThumbnailUri { get; set; }
        public string Body { get; set; }    // xhtml
        public string BodyMimeType { get; set; }
        public string[] MediaRefs { get; set; }
        public string Source { get; set; }
        public bool HasLocation { get; set; }
        public double? Latitude { get; set; }
        public double? Longitude { get; set; }
        public double? Altitude { get; set; }
        public double? TodoProgress { get; set; }
        public DateTime Timestamp { get; set; }

        // Synching
        public uint Revision { get; set; }
        public string SyncHmac { get; set; }    // HMAC of unencrypted body - used for synching - generated by CryptoService.GenerateContentHmac()
        public long? ConflictingNoteId { get; set; }

        public ReactiveList<string> Tags { get; set; } = new ReactiveList<string>();

        #region IDisposable implementation

        public virtual void Dispose()
        {
            // Please override in platform specific entity
        }

        #endregion
    }
}
